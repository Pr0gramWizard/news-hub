on:
  push:
    tags:
      - 'v*'

name: Release

jobs:
  sync-api:
    name: Sync API to remote server
    runs-on: ubuntu-latest
    steps:
      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: 'placeholder'

      - name: Adding Known Hosts
        run: ssh-keyscan -H ${{ secrets.SSH_HOST }}  >> ~/.ssh/known_hosts

      - name: Update version in env file
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            sed -i "s/^VERSION=.*/VERSION=${{ github.ref_name }}/g" ${{ secrets.REMOTE_NODE_API_PATH }/.env
            cd ${{ secrets.REMOTE_PATH }}
            eval $(ssh-agent -s)
            ssh-add ${{ secrets.REMOTE_GITHUB_SSH_KEY_LOCATION }}
            git pull

  sync-dashboard:
    name: Sync Dashboard to remote server
    runs-on: ubuntu-latest
    steps:
      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: 'placeholder'

      - name: Adding Known Hosts
        run: ssh-keyscan -H ${{ secrets.SSH_HOST }}  >> ~/.ssh/known_hosts

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: cd ./apps/dashboard && yarn install --frozen-lockfile

      - name: Create .env file
        run: touch ./apps/dashboard/.env

      - name: Add API_URL to .env
        run: echo 'VITE_API_URL="https://newshub.mortaga.de/api"' > ./apps/dashboard/.env

      - name: Add APP_VERSION to .env
        run: echo 'VITE_APP_VERSION="${{ github.ref_name }}"' > ./apps/dashboard/.env

      - name: Build dashboard
        run: cd ./apps/dashboard && yarn build

      - name: Push dashboard to remote server
        run: scp -r ./apps/dashboard/dist/* ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/${{ secrets.REMOTE_DASHBOARD_PATH }}

  release-please:
    needs: [ sync-api, sync-dashboard ]
    name: Create GitHub Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: cd ./apps/browser_extension && yarn install --frozen-lockfile

      - name: Create .env file
        run: cd ./apps/browser_extension && touch .env && echo 'API_URL="https://newshub.mortaga.de/api"' > .env

      - name: Build browser extension
        run: cd ./apps/browser_extension && yarn build

      - name: Zip build folder
        run: cd ./apps/browser_extension && zip -r ../../build_${{github.ref_name}}.zip ./build

      - name: Create Release
        run: gh release create ${{ github.ref }} --generate-notes './build_${{github.ref_name}}.zip#Browser Extension'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
