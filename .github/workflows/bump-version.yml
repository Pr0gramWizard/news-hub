name: Bump version

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Type of new version (major / minor / patch)'
        required: true
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  bump-version:
    runs-on: ubuntu-latest
    steps:
      # Check out the content (source branch).  Use a deploy key so that
      # when we push changes, it will trigger the release workflow
      # run that runs on: tag. (Using the GitHub token would
      # not run the workflow to prevent infinite recursion.)
      - name: Check out source
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Setup Git
        run: |
          git config user.name 'Maged Mortaga'
          git config user.email '18315564+Pr0gramWizard@users.noreply.github.com'

      - name: Bump version of top level package
        id: bump-version
        run: npm version ${{ github.event.inputs.version }}

      - name: Define version variable
        run: |
          VERSION=${{ steps.bump-version.outputs.stdout }}
          echo $VERSION
          VERSION=$(echo $VERSION | sed 's/^@//')
          echo $VERSION
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Bump version of all apps
        run: |
          sed -i "s/^version=.*/version=${{ env.VERSION }}/g" ./api/node/package.json
          sed -i "s/^version=.*/version=${{ env.VERSION }}/g" ./apps/browser_extension/package.json
          sed -i "s/^version=.*/version=${{ env.VERSION }}/g" ./apps/browser_extension/package.json
          cat package.json | grep version
          cat ./api/node/package.json | grep version
          cat ./apps/browser_extension/package.json | grep version
          cat ./apps/browser_extension/package.json | grep version

      # - name: Push latest version
      #   run: git push origin master --follow-tags